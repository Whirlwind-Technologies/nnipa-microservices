# Main application configuration
spring:
  application:
    name: tenant-management-service

  profiles:
    active: dev

  # Jackson Configuration
  jackson:
    default-property-inclusion: non_null
    serialization:
      write-dates-as-timestamps: false
      indent-output: true
    deserialization:
      fail-on-unknown-properties: false
    time-zone: UTC
    date-format: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'

  # JPA Configuration
  jpa:
    open-in-view: false
    show-sql: false
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        default_schema: tenant_registry
        jdbc:
          time_zone: UTC
          batch_size: 25
        order_inserts: true
        order_updates: true
        connection:
          provider_disables_autocommit: true
        query:
          in_clause_parameter_padding: true
        generate_statistics: false
      jakarta:
        persistence:
          sharedCache:
            mode: ENABLE_SELECTIVE

  # Datasource Configuration (will be overridden in profiles)
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      pool-name: TenantServicePool
      minimum-idle: 5
      maximum-pool-size: 20
      idle-timeout: 300000
      connection-timeout: 30000
      max-lifetime: 1800000
      auto-commit: false
      # Allow DDL operations for schema creation
      connection-init-sql: "SET search_path TO tenant_registry, public"

  # Flyway Configuration
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    table: schema_version
    baseline-version: 0

  # Cache Configuration
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=1000,expireAfterWrite=5m
    cache-names:
      - tenants
      - tenant-config
      - tenant-features

  # Task Execution Configuration
  task:
    execution:
      pool:
        core-size: 5
        max-size: 10
        queue-capacity: 100
      thread-name-prefix: tenant-exec-
    scheduling:
      pool:
        size: 5
      thread-name-prefix: tenant-sched-

# Server Configuration
server:
  port: 8081
  servlet:
    context-path: /api/v1
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: on_param
    include-exception: false
  shutdown: graceful

# Actuator Configuration
management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health,info,metrics,prometheus,env,loggers,caches
  endpoint:
    health:
      show-details: when-authorized
      probes:
        enabled: true
    metrics:
      enabled: true
  metrics:
    distribution:
      percentiles-histogram:
        http.server.requests: true
    tags:
      application: ${spring.application.name}
      environment: ${spring.profiles.active}
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

# Logging Configuration
logging:
  level:
    root: INFO
    com.nnipa.tenant: DEBUG
    org.springframework.web: INFO
    org.springframework.security: DEBUG
    org.hibernate.SQL: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/tenant-service.log
    max-size: 10MB
    max-history: 30

# OpenAPI/Swagger Configuration
springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    try-it-out-enabled: true
    filter: true
    operations-sorter: method
    tags-sorter: alpha
    disable-swagger-default-url: true
  show-actuator: false
  packages-to-scan: com.nnipa.tenant.controller
  paths-to-match: /**

# Application Custom Properties
app:
  tenant:
    default-schema-prefix: tenant_
    max-tenants-per-page: 20
    cache-ttl: 300
    provisioning:
      timeout-seconds: 60
      retry-attempts: 3
    limits:
      free:
        max-users: 10
        max-storage-gb: 25
        max-datasets: 100
      starter:
        max-users: 50
        max-storage-gb: 100
        max-datasets: 500
      professional:
        max-users: 200
        max-storage-gb: 500
        max-datasets: 2000
      enterprise:
        max-users: -1  # unlimited
        max-storage-gb: -1
        max-datasets: -1
    features:
      default:
        - BASIC_ANALYTICS
        - DATA_EXPORT
        - API_ACCESS
      professional:
        - ADVANCED_ANALYTICS
        - CUSTOM_BRANDING
        - PRIORITY_SUPPORT
      enterprise:
        - ML_MODELS
        - WHITE_LABELING
        - DEDICATED_SUPPORT
        - CUSTOM_INTEGRATIONS