services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: tenant-postgres
    environment:
      # Use postgres superuser for initialization
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_admin
      POSTGRES_DB: postgres
      # These will be created by init script
      APP_DB_USER: tenant_user
      APP_DB_PASS: tenant_pass
      APP_DB_NAME: tenant_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - tenant-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: tenant-redis
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - tenant-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Apache Kafka with KRaft (Simplified Configuration)
  kafka:
    image: bitnami/kafka:3.8
    container_name: tenant-kafka
    environment:
      # KRaft settings (no Zookeeper)
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:29092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      # Kafka Settings
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_CFG_LOG_RETENTION_HOURS: 168
      KAFKA_CFG_LOG_RETENTION_BYTES: 1073741824
      KAFKA_CFG_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_CFG_NUM_PARTITIONS: 3
      KAFKA_CFG_DEFAULT_REPLICATION_FACTOR: 1
      # KRaft mode - no Zookeeper
      KAFKA_ENABLE_KRAFT: yes
      KAFKA_KRAFT_CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qg
      # Heap settings for stability
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms256M"
    volumes:
      - kafka_data:/bitnami/kafka
    ports:
      - "29092:29092"
      - "9092:9092"
    networks:
      - tenant-network
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Kafka UI for Development
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: tenant-kafka-ui
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      DYNAMIC_CONFIG_ENABLED: true
    ports:
      - "8090:8080"
    networks:
      - tenant-network
    depends_on:
      kafka:
        condition: service_healthy

networks:
  tenant-network:
    name: tenant-network
    driver: bridge

volumes:
  postgres_data:
    name: tenant_postgres_data
  redis_data:
    name: tenant_redis_data
  kafka_data:
    name: tenant_kafka_data
